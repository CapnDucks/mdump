#!/bin/sh
#
# Simple script to add some useful Git and Terraform data to the Bash PS1 prompt.
# Copy this script to "${HOME}/.bash_prompt" and modify your "${HOME}/.bashrc"
# to include the following:
#	! test -f "${HOME}/.bash_prompt" || . "${HOME}/.bash_prompt"

ps1_add()
{
	__ps1_add_label="${1}"
	shift
	if ! test -z "${1}"; then
		printf '%s%s:%s' "${PS1_SEP}" "${__ps1_add_label}" "${*}"
		PS1_SEP=', '
	fi
	unset __ps1_add_label
}

ansi_fg()
{
	__ansi_fg_color="${1}";
	shift
	case "${__ansi_fg_color}" in
	(reset)			__ansi_fg_code='\[\e[0m\]';;
	(black)			__ansi_fg_code='\[\e[0;30m\]';;
	(charcoal|grey)		__ansi_fg_code='\[\e[1;30m\]';;
	(red|light_red)		__ansi_fg_code='\[\e[1;31m\]';;
	(dark_red|brick|blood)	__ansi_fg_code='\[\e[0;31m\]';;
	(dark_green|green)	__ansi_fg_code='\[\e[0;32m\]';;
	(bright_green|lime)	__ansi_fg_code='\[\e[1;32m\]';;
	(mustard|brown)		__ansi_fg_code='\[\e[0;33m\]';;
	(yellow)		__ansi_fg_code='\[\e[1;33m\]';;
	(dark_blue|navy|cobolt)	__ansi_fg_code='\[\e[0;34m\]';;
	(blue|light_blue)	__ansi_fg_code='\[\e[1;34m\]';;
	(magenta)		__ansi_fg_code='\[\e[1;35m\]';;
	(purple)		__ansi_fg_code='\[\e[0;35m\]';;
	(cyan)			__ansi_fg_code='\[\e[1;36m\]';;
	(teal|dark_cyan)	__ansi_fg_code='\[\e[0;36m\]';;
	(white)			__ansi_fg_code='\[\e[1;37m\]';;
	(default|plain)		__ansi_fg_code='\[\e[0;37m\]';;
	esac
	OFS="${IFS}"
	IFS=''
	set -- "${__ansi_fg_code}" "$*" '\[\e[0m\]'
	unset __ansi_fg_color
	unset __ansi_fg_code
	printf '%s' "${*}"
	IFS="${OFS}"
	unset OFS
}

git_branch()
{
	set -- "${PWD}"
	while ! test -z "${1}"; do
		if test -d "${1}/.git"; then
			set -- "${1}" "$(git st -s -uno|wc -l)"
			if test "${2}" -gt '0'; then
				printf '%s#%s' \
					"$(ansi_fg green "$(git rev-parse --abbrev-ref HEAD)")" \
					"$(ansi_fg red "${2}")"
			else
				printf '%s'  "$(ansi_fg green "$(git rev-parse --abbrev-ref HEAD)")"
			fi
			return
		fi
		set -- "${1%/*}"
	done
}

tf_workspace()
{
	set -- "${PWD}"
	while ! test -z "${1}"; do
		if test -d "${1}/.terraform"; then
			printf '%s' "$(ansi_fg purple "$(cd "${1}" && terraform workspace show)")"
			return
		fi
		set -- "${1%/*}"
	done
}

aws_profile()
{
	set --
	test -z "${AWS_PROFILE}" || set -- "$(ansi_fg mustard "${AWS_PROFILE}")"
	test -z "${AWS_ASSUME_ROLE}" || set -- "$(ansi_fg mustard "${AWS_ASSUME_ROLE}")"

	if ! test -z "${AWS_MFA_EXPIRATION}" && test "${AWS_MFA_EXPIRATION:-0}" -lt "$(date -u '+%s')"; then
		set -- "${1}[$(ansi_fg red 'expired')]"
	fi
	test -z "${1}" || printf '%s' "${*}"
}

update_prompt()
{
	# Original Ubuntu PS1: \[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$

	PS1_SEP=
	! test -e "${HOME}/.aws/mfa/current" || . "${HOME}/.aws/mfa/current"
	export AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_PROFILE AWS_REGION

	PS1_AWS="$(ps1_add 'aws' "$(aws_profile)")"
	test -z "${PS1_AWS}" || PS1_SEP=', '

	PS1_TF="$(ps1_add 'tf' "$(tf_workspace)")"
	test -z "${PS1_TF}" || PS1_SEP=', '

	PS1_GIT="$(ps1_add 'git' "$(git_branch)")"
	test -z "${PS1_GIT}" || PS1_SEP=', '

	eval "PS1='[${PS1_AWS}${PS1_TF}${PS1_GIT}]\\n\\[\\e[01;32m\\]${USER%@*}\\[\\e[01;30m\\]@\\[\\e[00m\\]\\h\\[\\e[00m\\]:\\[\e[01;34m\\]\\w\\[\\e[00m\\]\\$ '"
	export PS1
}

PROMPT_COMMAND='update_prompt'
export PROMPT_COMMAND
